#include<iostream>
#include<string>
#include<cmath>
#include<algorithm>
#include<vector>
#include<map>
#include<set>
using namespace std;

int node_num;
int tree[1001];
bool is_max=true;
bool is_min=true;
vector<int> path_vector;
void print(int node) {
	if(node <=node_num){
		path_vector.push_back(node);
		if(node*2+1<=node_num){
			print(node*2+1);
			if(is_max && tree[node*2+1] > tree[node]){
				is_max =false;
			}
			if(is_min && tree[node*2+1] < tree[node]){
				is_min =false;
			}
		} 
		if(node*2<=node_num){
			print(node*2);
			if(is_max && tree[node*2] > tree[node]){
				is_max =false;
			}
			if(is_min && tree[node*2] < tree[node]){
				is_min =false;
			}
		}
		if(node*2>node_num){
			for(int i =0;i<path_vector.size();i++){
				if(i!=0){
					cout << " ";
				}
				cout << tree[path_vector[i]];
			}
			cout << endl;
		}
		path_vector.pop_back();
	}
}
int main() {
	cin >> node_num ;
	for(int i=1;i<=node_num;i++){
		cin >> tree[i];
	}
	print(1);
	if(is_max){
		cout << "Max Heap";
	} else if(is_min){
		cout << "Min Heap";
	} else {
		cout << "Not Heap";
	}
	return 0;
}